{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useParams}from\"react-router-dom\";import axios from\"axios\";import styled from\"styled-components\";// Styled components\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Container=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n  background-color: #f4f4f4;\n  min-height: 100vh;\n`;const Title=styled.h1`\n  font-size: 2.5rem;\n  color: #333;\n  margin-bottom: 1rem;\n`;const Description=styled.p`\n  font-size: 1.2rem;\n  color: #555;\n  margin-bottom: 2rem;\n  text-align: center;\n`;const QuestionsTitle=styled.h2`\n  font-size: 2rem;\n  color: #333;\n  margin-bottom: 1rem;\n`;const QuestionList=styled.ul`\n  list-style-type: none;\n  padding: 0;\n  width: 100%;\n  max-width: 800px;\n`;const QuestionItem=styled.li`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  margin: 1rem 0;\n  padding: 1rem;\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: translateY(-4px);\n  }\n`;const QuestionText=styled.p`\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: #333;\n`;const OptionList=styled.ul`\n  list-style-type: none;\n  padding-left: 1.5rem;\n`;const OptionItem=styled.li`\n  margin: 0.5rem 0;\n  font-size: 1rem;\n  color: ${props=>props.isCorrect?\"#28a745\":\"#555\"};\n  font-weight: ${props=>props.isCorrect?\"bold\":\"normal\"};\n`;const QuizDetail=()=>{const{quizId}=useParams();const[quiz,setQuiz]=useState(null);const[questions,setQuestions]=useState([]);useEffect(()=>{const fetchQuizDetails=async()=>{try{const quizResponse=await axios.get(`http://localhost:3001/quizzes/${quizId}`);setQuiz(quizResponse.data.data.quiz);const questionResponse=await axios.get(`http://localhost:3001/quizzes/${quizId}/populate`);setQuestions(questionResponse.data.data.quiz.questions);}catch(error){console.error(\"Error fetching quiz details:\",error);}};fetchQuizDetails();},[quizId]);return/*#__PURE__*/_jsx(Container,{children:quiz?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Title,{children:quiz.title}),/*#__PURE__*/_jsx(Description,{children:quiz.description}),/*#__PURE__*/_jsx(QuestionsTitle,{children:\"Questions\"}),/*#__PURE__*/_jsx(QuestionList,{children:questions.length>0?questions.map(question=>/*#__PURE__*/_jsxs(QuestionItem,{children:[/*#__PURE__*/_jsx(QuestionText,{children:question.text}),/*#__PURE__*/_jsx(OptionList,{children:question.options.map((option,index)=>/*#__PURE__*/_jsxs(OptionItem,{isCorrect:index===question.correctAnswerIndex,children:[option,\" \",index===question.correctAnswerIndex&&\"(Correct Answer)\"]},index))})]},question._id)):/*#__PURE__*/_jsx(\"p\",{children:\"No questions available for this quiz.\"})})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})});};export default QuizDetail;","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","styled","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Container","div","Title","h1","Description","p","QuestionsTitle","h2","QuestionList","ul","QuestionItem","li","QuestionText","OptionList","OptionItem","props","isCorrect","QuizDetail","quizId","quiz","setQuiz","questions","setQuestions","fetchQuizDetails","quizResponse","get","data","questionResponse","error","console","children","title","description","length","map","question","text","options","option","index","correctAnswerIndex","_id"],"sources":["C:/WorkSpace/FALL2024/SDN302/Assignment2/fe/src/pages/QuizDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled components\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 2rem;\r\n  background-color: #f4f4f4;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 1.2rem;\r\n  color: #555;\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst QuestionsTitle = styled.h2`\r\n  font-size: 2rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst QuestionList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  width: 100%;\r\n  max-width: 800px;\r\n`;\r\n\r\nconst QuestionItem = styled.li`\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  margin: 1rem 0;\r\n  padding: 1rem;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: translateY(-4px);\r\n  }\r\n`;\r\n\r\nconst QuestionText = styled.p`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n`;\r\n\r\nconst OptionList = styled.ul`\r\n  list-style-type: none;\r\n  padding-left: 1.5rem;\r\n`;\r\n\r\nconst OptionItem = styled.li`\r\n  margin: 0.5rem 0;\r\n  font-size: 1rem;\r\n  color: ${(props) => (props.isCorrect ? \"#28a745\" : \"#555\")};\r\n  font-weight: ${(props) => (props.isCorrect ? \"bold\" : \"normal\")};\r\n`;\r\n\r\nconst QuizDetail = () => {\r\n  const { quizId } = useParams();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchQuizDetails = async () => {\r\n      try {\r\n        const quizResponse = await axios.get(\r\n          `http://localhost:3001/quizzes/${quizId}`\r\n        );\r\n        setQuiz(quizResponse.data.data.quiz);\r\n\r\n        const questionResponse = await axios.get(\r\n          `http://localhost:3001/quizzes/${quizId}/populate`\r\n        );\r\n        setQuestions(questionResponse.data.data.quiz.questions);\r\n      } catch (error) {\r\n        console.error(\"Error fetching quiz details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchQuizDetails();\r\n  }, [quizId]);\r\n\r\n  return (\r\n    <Container>\r\n      {quiz ? (\r\n        <>\r\n          <Title>{quiz.title}</Title>\r\n          <Description>{quiz.description}</Description>\r\n          <QuestionsTitle>Questions</QuestionsTitle>\r\n          <QuestionList>\r\n            {questions.length > 0 ? (\r\n              questions.map((question) => (\r\n                <QuestionItem key={question._id}>\r\n                  <QuestionText>{question.text}</QuestionText>\r\n                  <OptionList>\r\n                    {question.options.map((option, index) => (\r\n                      <OptionItem\r\n                        key={index}\r\n                        isCorrect={index === question.correctAnswerIndex}\r\n                      >\r\n                        {option}{\" \"}\r\n                        {index === question.correctAnswerIndex &&\r\n                          \"(Correct Answer)\"}\r\n                      </OptionItem>\r\n                    ))}\r\n                  </OptionList>\r\n                </QuestionItem>\r\n              ))\r\n            ) : (\r\n              <p>No questions available for this quiz.</p>\r\n            )}\r\n          </QuestionList>\r\n        </>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuizDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}