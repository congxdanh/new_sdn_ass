{"ast":null,"code":"var _jsxFileName = \"C:\\\\WorkSpace\\\\FALL2024\\\\SDN302\\\\Assignment2\\\\fe\\\\src\\\\pages\\\\QuizDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\n// Styled components\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n  background-color: #f4f4f4;\n  min-height: 100vh;\n`;\n_c = Container;\nconst Title = styled.h1`\n  font-size: 2.5rem;\n  color: #333;\n  margin-bottom: 1rem;\n`;\n_c2 = Title;\nconst Description = styled.p`\n  font-size: 1.2rem;\n  color: #555;\n  margin-bottom: 2rem;\n  text-align: center;\n`;\n_c3 = Description;\nconst QuestionsTitle = styled.h2`\n  font-size: 2rem;\n  color: #333;\n  margin-bottom: 1rem;\n`;\n_c4 = QuestionsTitle;\nconst QuestionList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  width: 100%;\n  max-width: 800px;\n`;\n_c5 = QuestionList;\nconst QuestionItem = styled.li`\n  background-color: #fff;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  margin: 1rem 0;\n  padding: 1rem;\n  transition: transform 0.2s;\n\n  &:hover {\n    transform: translateY(-4px);\n  }\n`;\n_c6 = QuestionItem;\nconst QuestionText = styled.p`\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: #333;\n`;\n_c7 = QuestionText;\nconst OptionList = styled.ul`\n  list-style-type: none;\n  padding-left: 1.5rem;\n`;\n_c8 = OptionList;\nconst OptionItem = styled.li`\n  margin: 0.5rem 0;\n  font-size: 1rem;\n  color: ${props => props.isCorrect ? \"#28a745\" : \"#555\"};\n  font-weight: ${props => props.isCorrect ? \"bold\" : \"normal\"};\n`;\n_c9 = OptionItem;\nconst QuizDetail = () => {\n  _s();\n  const {\n    quizId\n  } = useParams();\n  const [quiz, setQuiz] = useState(null);\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    const fetchQuizDetails = async () => {\n      try {\n        const quizResponse = await axios.get(`https://sdn-ass1.onrender.com/quizzes/${quizId}`);\n        setQuiz(quizResponse.data.data.quiz);\n        const questionResponse = await axios.get(`https://sdn-ass1.onrender.com/quizzes/${quizId}/populate`);\n        setQuestions(questionResponse.data.data.quiz.questions);\n      } catch (error) {\n        console.error(\"Error fetching quiz details:\", error);\n      }\n    };\n    fetchQuizDetails();\n  }, [quizId]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: quiz ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: quiz.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Description, {\n        children: quiz.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QuestionsTitle, {\n        children: \"Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n        children: questions.length > 0 ? questions.map(question => /*#__PURE__*/_jsxDEV(QuestionItem, {\n          children: [/*#__PURE__*/_jsxDEV(QuestionText, {\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(OptionList, {\n            children: question.options.map((option, index) => /*#__PURE__*/_jsxDEV(OptionItem, {\n              isCorrect: index === question.correctAnswerIndex,\n              children: [option, \" \", index === question.correctAnswerIndex && \"(Correct Answer)\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No questions available for this quiz.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizDetail, \"iE2SjOwGarPcqyTRD6969KJvVdk=\", false, function () {\n  return [useParams];\n});\n_c10 = QuizDetail;\nexport default QuizDetail;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"Description\");\n$RefreshReg$(_c4, \"QuestionsTitle\");\n$RefreshReg$(_c5, \"QuestionList\");\n$RefreshReg$(_c6, \"QuestionItem\");\n$RefreshReg$(_c7, \"QuestionText\");\n$RefreshReg$(_c8, \"OptionList\");\n$RefreshReg$(_c9, \"OptionItem\");\n$RefreshReg$(_c10, \"QuizDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","Title","h1","_c2","Description","p","_c3","QuestionsTitle","h2","_c4","QuestionList","ul","_c5","QuestionItem","li","_c6","QuestionText","_c7","OptionList","_c8","OptionItem","props","isCorrect","_c9","QuizDetail","_s","quizId","quiz","setQuiz","questions","setQuestions","fetchQuizDetails","quizResponse","get","data","questionResponse","error","console","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","length","map","question","text","options","option","index","correctAnswerIndex","_id","_c10","$RefreshReg$"],"sources":["C:/WorkSpace/FALL2024/SDN302/Assignment2/fe/src/pages/QuizDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\n// Styled components\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 2rem;\r\n  background-color: #f4f4f4;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 2.5rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 1.2rem;\r\n  color: #555;\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nconst QuestionsTitle = styled.h2`\r\n  font-size: 2rem;\r\n  color: #333;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nconst QuestionList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  width: 100%;\r\n  max-width: 800px;\r\n`;\r\n\r\nconst QuestionItem = styled.li`\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n  margin: 1rem 0;\r\n  padding: 1rem;\r\n  transition: transform 0.2s;\r\n\r\n  &:hover {\r\n    transform: translateY(-4px);\r\n  }\r\n`;\r\n\r\nconst QuestionText = styled.p`\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  color: #333;\r\n`;\r\n\r\nconst OptionList = styled.ul`\r\n  list-style-type: none;\r\n  padding-left: 1.5rem;\r\n`;\r\n\r\nconst OptionItem = styled.li`\r\n  margin: 0.5rem 0;\r\n  font-size: 1rem;\r\n  color: ${(props) => (props.isCorrect ? \"#28a745\" : \"#555\")};\r\n  font-weight: ${(props) => (props.isCorrect ? \"bold\" : \"normal\")};\r\n`;\r\n\r\nconst QuizDetail = () => {\r\n  const { quizId } = useParams();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchQuizDetails = async () => {\r\n      try {\r\n        const quizResponse = await axios.get(\r\n          `https://sdn-ass1.onrender.com/quizzes/${quizId}`\r\n        );\r\n        setQuiz(quizResponse.data.data.quiz);\r\n\r\n        const questionResponse = await axios.get(\r\n          `https://sdn-ass1.onrender.com/quizzes/${quizId}/populate`\r\n        );\r\n        setQuestions(questionResponse.data.data.quiz.questions);\r\n      } catch (error) {\r\n        console.error(\"Error fetching quiz details:\", error);\r\n      }\r\n    };\r\n\r\n    fetchQuizDetails();\r\n  }, [quizId]);\r\n\r\n  return (\r\n    <Container>\r\n      {quiz ? (\r\n        <>\r\n          <Title>{quiz.title}</Title>\r\n          <Description>{quiz.description}</Description>\r\n          <QuestionsTitle>Questions</QuestionsTitle>\r\n          <QuestionList>\r\n            {questions.length > 0 ? (\r\n              questions.map((question) => (\r\n                <QuestionItem key={question._id}>\r\n                  <QuestionText>{question.text}</QuestionText>\r\n                  <OptionList>\r\n                    {question.options.map((option, index) => (\r\n                      <OptionItem\r\n                        key={index}\r\n                        isCorrect={index === question.correctAnswerIndex}\r\n                      >\r\n                        {option}{\" \"}\r\n                        {index === question.correctAnswerIndex &&\r\n                          \"(Correct Answer)\"}\r\n                      </OptionItem>\r\n                    ))}\r\n                  </OptionList>\r\n                </QuestionItem>\r\n              ))\r\n            ) : (\r\n              <p>No questions available for this quiz.</p>\r\n            )}\r\n          </QuestionList>\r\n        </>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QuizDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}