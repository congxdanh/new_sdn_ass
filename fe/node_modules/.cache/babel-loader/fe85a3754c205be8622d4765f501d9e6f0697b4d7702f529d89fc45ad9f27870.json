{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    login: {\n      currentUser: null,\n      isFetching: false,\n      error: false\n    },\n    register: {\n      isFetching: false,\n      error: false,\n      success: false\n    }\n  },\n  reducers: {\n    loginStart: state => {\n      state.login.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      state.login.isFetching = false;\n      state.login.currentUser = action.payload;\n      state.login.error = true;\n    },\n    loginFail: state => {\n      state.login.isFetching = false;\n      state.login.error = true;\n    },\n    registerStart: state => {\n      state.register.isFetching = true;\n    },\n    registerSuccess: state => {\n      state.register.isFetching = false;\n      state.register.error = true;\n      state.register.success = true;\n    },\n    registerFail: state => {\n      state.register.isFetching = false;\n      state.register.error = true;\n      state.register.success = false;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginFail,\n  loginSuccess\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","authSlice","name","initialState","login","currentUser","isFetching","error","register","success","reducers","loginStart","state","loginSuccess","action","payload","loginFail","registerStart","registerSuccess","registerFail","actions","reducer"],"sources":["C:/WorkSpace/FALL2024/SDN302/Assignment2/fe/src/redux/reducers/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    login: {\r\n      currentUser: null,\r\n      isFetching: false,\r\n      error: false,\r\n    },\r\n    register: {\r\n      isFetching: false,\r\n      error: false,\r\n      success: false,\r\n    },\r\n  },\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.login.isFetching = true;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.login.isFetching = false;\r\n      state.login.currentUser = action.payload;\r\n      state.login.error = true;\r\n    },\r\n    loginFail: (state) => {\r\n      state.login.isFetching = false;\r\n      state.login.error = true;\r\n    },\r\n    registerStart: (state) => {\r\n      state.register.isFetching = true;\r\n    },\r\n    registerSuccess: (state) => {\r\n      state.register.isFetching = false;\r\n      state.register.error = true;\r\n      state.register.success = true;\r\n    },\r\n    registerFail: (state) => {\r\n      state.register.isFetching = false;\r\n      state.register.error = true;\r\n      state.register.success = false;\r\n    },\r\n  },\r\n});\r\nexport const { loginStart, loginFail, loginSuccess } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE;MACLC,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE;IACT,CAAC;IACDC,QAAQ,EAAE;MACRF,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE,KAAK;MACZE,OAAO,EAAE;IACX;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,IAAI;IAC/B,CAAC;IACDO,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BM,KAAK,CAACR,KAAK,CAACC,WAAW,GAAGS,MAAM,CAACC,OAAO;MACxCH,KAAK,CAACR,KAAK,CAACG,KAAK,GAAG,IAAI;IAC1B,CAAC;IACDS,SAAS,EAAGJ,KAAK,IAAK;MACpBA,KAAK,CAACR,KAAK,CAACE,UAAU,GAAG,KAAK;MAC9BM,KAAK,CAACR,KAAK,CAACG,KAAK,GAAG,IAAI;IAC1B,CAAC;IACDU,aAAa,EAAGL,KAAK,IAAK;MACxBA,KAAK,CAACJ,QAAQ,CAACF,UAAU,GAAG,IAAI;IAClC,CAAC;IACDY,eAAe,EAAGN,KAAK,IAAK;MAC1BA,KAAK,CAACJ,QAAQ,CAACF,UAAU,GAAG,KAAK;MACjCM,KAAK,CAACJ,QAAQ,CAACD,KAAK,GAAG,IAAI;MAC3BK,KAAK,CAACJ,QAAQ,CAACC,OAAO,GAAG,IAAI;IAC/B,CAAC;IACDU,YAAY,EAAGP,KAAK,IAAK;MACvBA,KAAK,CAACJ,QAAQ,CAACF,UAAU,GAAG,KAAK;MACjCM,KAAK,CAACJ,QAAQ,CAACD,KAAK,GAAG,IAAI;MAC3BK,KAAK,CAACJ,QAAQ,CAACC,OAAO,GAAG,KAAK;IAChC;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEE,UAAU;EAAEK,SAAS;EAAEH;AAAa,CAAC,GAAGZ,SAAS,CAACmB,OAAO;AAExE,eAAenB,SAAS,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}